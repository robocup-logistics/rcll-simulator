// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GripsBeaconSignal.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LlsfMsgs {

  /// <summary>Holder for reflection information generated from GripsBeaconSignal.proto</summary>
  public static partial class GripsBeaconSignalReflection {

    #region Descriptor
    /// <summary>File descriptor for GripsBeaconSignal.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GripsBeaconSignalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdHcmlwc0JlYWNvblNpZ25hbC5wcm90bxIJbGxzZl9tc2dzGhJCZWFjb25T",
            "aWduYWwucHJvdG8ifQoRR3JpcHNCZWFjb25TaWduYWwSLgoNYmVhY29uX3Np",
            "Z25hbBgBIAIoCzIXLmxsc2ZfbXNncy5CZWFjb25TaWduYWwSDwoHdGFza19p",
            "ZBgCIAEoBSInCghDb21wVHlwZRIMCgdDT01QX0lEEIgnEg0KCE1TR19UWVBF",
            "EPUDQjoKH29yZy5yb2JvY3VwX2xvZ2lzdGljcy5sbHNmX21zZ3NCF0dyaXBz",
            "QmVhY29uU2lnbmFsUHJvdG9z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LlsfMsgs.BeaconSignalReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LlsfMsgs.GripsBeaconSignal), global::LlsfMsgs.GripsBeaconSignal.Parser, new[]{ "BeaconSignal", "TaskId" }, null, new[]{ typeof(global::LlsfMsgs.GripsBeaconSignal.Types.CompType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GripsBeaconSignal : pb::IMessage<GripsBeaconSignal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GripsBeaconSignal> _parser = new pb::MessageParser<GripsBeaconSignal>(() => new GripsBeaconSignal());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GripsBeaconSignal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LlsfMsgs.GripsBeaconSignalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GripsBeaconSignal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GripsBeaconSignal(GripsBeaconSignal other) : this() {
      _hasBits0 = other._hasBits0;
      beaconSignal_ = other.beaconSignal_ != null ? other.beaconSignal_.Clone() : null;
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GripsBeaconSignal Clone() {
      return new GripsBeaconSignal(this);
    }

    /// <summary>Field number for the "beacon_signal" field.</summary>
    public const int BeaconSignalFieldNumber = 1;
    private global::LlsfMsgs.BeaconSignal beaconSignal_;
    /// <summary>
    /// beacon for refbox
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LlsfMsgs.BeaconSignal BeaconSignal {
      get { return beaconSignal_; }
      set {
        beaconSignal_ = value;
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private readonly static int TaskIdDefaultValue = 0;

    private int taskId_;
    /// <summary>
    /// current task-id of robot 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { if ((_hasBits0 & 1) != 0) { return taskId_; } else { return TaskIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        taskId_ = value;
      }
    }
    /// <summary>Gets whether the "task_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTaskId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "task_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTaskId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GripsBeaconSignal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GripsBeaconSignal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BeaconSignal, other.BeaconSignal)) return false;
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (beaconSignal_ != null) hash ^= BeaconSignal.GetHashCode();
      if (HasTaskId) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (beaconSignal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BeaconSignal);
      }
      if (HasTaskId) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (beaconSignal_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BeaconSignal);
      }
      if (HasTaskId) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (beaconSignal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BeaconSignal);
      }
      if (HasTaskId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GripsBeaconSignal other) {
      if (other == null) {
        return;
      }
      if (other.beaconSignal_ != null) {
        if (beaconSignal_ == null) {
          BeaconSignal = new global::LlsfMsgs.BeaconSignal();
        }
        BeaconSignal.MergeFrom(other.BeaconSignal);
      }
      if (other.HasTaskId) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (beaconSignal_ == null) {
              BeaconSignal = new global::LlsfMsgs.BeaconSignal();
            }
            input.ReadMessage(BeaconSignal);
            break;
          }
          case 16: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (beaconSignal_ == null) {
              BeaconSignal = new global::LlsfMsgs.BeaconSignal();
            }
            input.ReadMessage(BeaconSignal);
            break;
          }
          case 16: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GripsBeaconSignal message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CompType {
        [pbr::OriginalName("COMP_ID")] CompId = 5000,
        [pbr::OriginalName("MSG_TYPE")] MsgType = 501,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
