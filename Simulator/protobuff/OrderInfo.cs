// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OrderInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LlsfMsgs {

  /// <summary>Holder for reflection information generated from OrderInfo.proto</summary>
  public static partial class OrderInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for OrderInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrderInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9PcmRlckluZm8ucHJvdG8SCWxsc2ZfbXNncxoKVGVhbS5wcm90bxoKVGlt",
            "ZS5wcm90bxoSUHJvZHVjdENvbG9yLnByb3RvIpABChNVbmNvbmZpcm1lZERl",
            "bGl2ZXJ5EgoKAmlkGAEgAigNEh0KBHRlYW0YAiACKA4yDy5sbHNmX21zZ3Mu",
            "VGVhbRImCg1kZWxpdmVyeV90aW1lGAMgAigLMg8ubGxzZl9tc2dzLlRpbWUi",
            "JgoIQ29tcFR5cGUSDAoHQ09NUF9JRBDQDxIMCghNU0dfVFlQRRAtIqAECgVP",
            "cmRlchIKCgJpZBgBIAIoDRIvCgpjb21wbGV4aXR5GAIgAigOMhsubGxzZl9t",
            "c2dzLk9yZGVyLkNvbXBsZXhpdHkSKAoKYmFzZV9jb2xvchgDIAIoDjIULmxs",
            "c2ZfbXNncy5CYXNlQ29sb3ISKQoLcmluZ19jb2xvcnMYBCADKA4yFC5sbHNm",
            "X21zZ3MuUmluZ0NvbG9yEiYKCWNhcF9jb2xvchgFIAIoDjITLmxsc2ZfbXNn",
            "cy5DYXBDb2xvchIaChJxdWFudGl0eV9yZXF1ZXN0ZWQYBiACKA0SHwoXcXVh",
            "bnRpdHlfZGVsaXZlcmVkX2N5YW4YByACKA0SIgoacXVhbnRpdHlfZGVsaXZl",
            "cmVkX21hZ2VudGEYCCACKA0SHQoVZGVsaXZlcnlfcGVyaW9kX2JlZ2luGAkg",
            "AigNEhsKE2RlbGl2ZXJ5X3BlcmlvZF9lbmQYCiACKA0SFQoNZGVsaXZlcnlf",
            "Z2F0ZRgLIAIoDRI+ChZ1bmNvbmZpcm1lZF9kZWxpdmVyaWVzGAwgAygLMh4u",
            "bGxzZl9tc2dzLlVuY29uZmlybWVkRGVsaXZlcnkSEwoLY29tcGV0aXRpdmUY",
            "DSACKAgiJgoIQ29tcFR5cGUSDAoHQ09NUF9JRBDQDxIMCghNU0dfVFlQRRAq",
            "IiwKCkNvbXBsZXhpdHkSBgoCQzAQABIGCgJDMRABEgYKAkMyEAISBgoCQzMQ",
            "AyJVCglPcmRlckluZm8SIAoGb3JkZXJzGAEgAygLMhAubGxzZl9tc2dzLk9y",
            "ZGVyIiYKCENvbXBUeXBlEgwKB0NPTVBfSUQQ0A8SDAoITVNHX1RZUEUQKSJy",
            "ChFTZXRPcmRlckRlbGl2ZXJlZBIjCgp0ZWFtX2NvbG9yGAEgAigOMg8ubGxz",
            "Zl9tc2dzLlRlYW0SEAoIb3JkZXJfaWQYAiACKA0iJgoIQ29tcFR5cGUSDAoH",
            "Q09NUF9JRBDQDxIMCghNU0dfVFlQRRArIl8KD0NvbmZpcm1EZWxpdmVyeRIT",
            "CgtkZWxpdmVyeV9pZBgBIAIoDRIPCgdjb3JyZWN0GAIgAigIIiYKCENvbXBU",
            "eXBlEgwKB0NPTVBfSUQQ0A8SDAoITVNHX1RZUEUQLkIyCh9vcmcucm9ib2N1",
            "cF9sb2dpc3RpY3MubGxzZl9tc2dzQg9PcmRlckluZm9Qcm90b3M="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LlsfMsgs.TeamReflection.Descriptor, global::Llsfmsgs.TimeReflection.Descriptor, global::LlsfMsgs.ProductColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LlsfMsgs.UnconfirmedDelivery), global::LlsfMsgs.UnconfirmedDelivery.Parser, new[]{ "Id", "Team", "DeliveryTime" }, null, new[]{ typeof(global::LlsfMsgs.UnconfirmedDelivery.Types.CompType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LlsfMsgs.Order), global::LlsfMsgs.Order.Parser, new[]{ "Id", "Complexity", "BaseColor", "RingColors", "CapColor", "QuantityRequested", "QuantityDeliveredCyan", "QuantityDeliveredMagenta", "DeliveryPeriodBegin", "DeliveryPeriodEnd", "DeliveryGate", "UnconfirmedDeliveries", "Competitive" }, null, new[]{ typeof(global::LlsfMsgs.Order.Types.CompType), typeof(global::LlsfMsgs.Order.Types.Complexity) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LlsfMsgs.OrderInfo), global::LlsfMsgs.OrderInfo.Parser, new[]{ "Orders" }, null, new[]{ typeof(global::LlsfMsgs.OrderInfo.Types.CompType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LlsfMsgs.SetOrderDelivered), global::LlsfMsgs.SetOrderDelivered.Parser, new[]{ "TeamColor", "OrderId" }, null, new[]{ typeof(global::LlsfMsgs.SetOrderDelivered.Types.CompType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LlsfMsgs.ConfirmDelivery), global::LlsfMsgs.ConfirmDelivery.Parser, new[]{ "DeliveryId", "Correct" }, null, new[]{ typeof(global::LlsfMsgs.ConfirmDelivery.Types.CompType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UnconfirmedDelivery : pb::IMessage<UnconfirmedDelivery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnconfirmedDelivery> _parser = new pb::MessageParser<UnconfirmedDelivery>(() => new UnconfirmedDelivery());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnconfirmedDelivery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LlsfMsgs.OrderInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnconfirmedDelivery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnconfirmedDelivery(UnconfirmedDelivery other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      team_ = other.team_;
      deliveryTime_ = other.deliveryTime_ != null ? other.deliveryTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnconfirmedDelivery Clone() {
      return new UnconfirmedDelivery(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 2;
    private readonly static global::LlsfMsgs.Team TeamDefaultValue = global::LlsfMsgs.Team.Cyan;

    private global::LlsfMsgs.Team team_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LlsfMsgs.Team Team {
      get { if ((_hasBits0 & 2) != 0) { return team_; } else { return TeamDefaultValue; } }
      set {
        _hasBits0 |= 2;
        team_ = value;
      }
    }
    /// <summary>Gets whether the "team" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTeam {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "team" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTeam() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "delivery_time" field.</summary>
    public const int DeliveryTimeFieldNumber = 3;
    private global::Llsfmsgs.Time deliveryTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Llsfmsgs.Time DeliveryTime {
      get { return deliveryTime_; }
      set {
        deliveryTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnconfirmedDelivery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnconfirmedDelivery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Team != other.Team) return false;
      if (!object.Equals(DeliveryTime, other.DeliveryTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasTeam) hash ^= Team.GetHashCode();
      if (deliveryTime_ != null) hash ^= DeliveryTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasTeam) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Team);
      }
      if (deliveryTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeliveryTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasTeam) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Team);
      }
      if (deliveryTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeliveryTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasTeam) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
      }
      if (deliveryTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeliveryTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnconfirmedDelivery other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasTeam) {
        Team = other.Team;
      }
      if (other.deliveryTime_ != null) {
        if (deliveryTime_ == null) {
          DeliveryTime = new global::Llsfmsgs.Time();
        }
        DeliveryTime.MergeFrom(other.DeliveryTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Team = (global::LlsfMsgs.Team) input.ReadEnum();
            break;
          }
          case 26: {
            if (deliveryTime_ == null) {
              DeliveryTime = new global::Llsfmsgs.Time();
            }
            input.ReadMessage(DeliveryTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Team = (global::LlsfMsgs.Team) input.ReadEnum();
            break;
          }
          case 26: {
            if (deliveryTime_ == null) {
              DeliveryTime = new global::Llsfmsgs.Time();
            }
            input.ReadMessage(DeliveryTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UnconfirmedDelivery message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CompType {
        [pbr::OriginalName("COMP_ID")] CompId = 2000,
        [pbr::OriginalName("MSG_TYPE")] MsgType = 45,
      }

    }
    #endregion

  }

  public sealed partial class Order : pb::IMessage<Order>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Order> _parser = new pb::MessageParser<Order>(() => new Order());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Order> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LlsfMsgs.OrderInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order(Order other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      complexity_ = other.complexity_;
      baseColor_ = other.baseColor_;
      ringColors_ = other.ringColors_.Clone();
      capColor_ = other.capColor_;
      quantityRequested_ = other.quantityRequested_;
      quantityDeliveredCyan_ = other.quantityDeliveredCyan_;
      quantityDeliveredMagenta_ = other.quantityDeliveredMagenta_;
      deliveryPeriodBegin_ = other.deliveryPeriodBegin_;
      deliveryPeriodEnd_ = other.deliveryPeriodEnd_;
      deliveryGate_ = other.deliveryGate_;
      unconfirmedDeliveries_ = other.unconfirmedDeliveries_.Clone();
      competitive_ = other.competitive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order Clone() {
      return new Order(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    /// <summary>
    /// ID and requested product of this order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "complexity" field.</summary>
    public const int ComplexityFieldNumber = 2;
    private readonly static global::LlsfMsgs.Order.Types.Complexity ComplexityDefaultValue = global::LlsfMsgs.Order.Types.Complexity.C0;

    private global::LlsfMsgs.Order.Types.Complexity complexity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LlsfMsgs.Order.Types.Complexity Complexity {
      get { if ((_hasBits0 & 2) != 0) { return complexity_; } else { return ComplexityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        complexity_ = value;
      }
    }
    /// <summary>Gets whether the "complexity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasComplexity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "complexity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearComplexity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "base_color" field.</summary>
    public const int BaseColorFieldNumber = 3;
    private readonly static global::LlsfMsgs.BaseColor BaseColorDefaultValue = global::LlsfMsgs.BaseColor.BaseUncolored;

    private global::LlsfMsgs.BaseColor baseColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LlsfMsgs.BaseColor BaseColor {
      get { if ((_hasBits0 & 4) != 0) { return baseColor_; } else { return BaseColorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        baseColor_ = value;
      }
    }
    /// <summary>Gets whether the "base_color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaseColor {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "base_color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaseColor() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "ring_colors" field.</summary>
    public const int RingColorsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LlsfMsgs.RingColor> _repeated_ringColors_codec
        = pb::FieldCodec.ForEnum(32, x => (int) x, x => (global::LlsfMsgs.RingColor) x);
    private readonly pbc::RepeatedField<global::LlsfMsgs.RingColor> ringColors_ = new pbc::RepeatedField<global::LlsfMsgs.RingColor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LlsfMsgs.RingColor> RingColors {
      get { return ringColors_; }
    }

    /// <summary>Field number for the "cap_color" field.</summary>
    public const int CapColorFieldNumber = 5;
    private readonly static global::LlsfMsgs.CapColor CapColorDefaultValue = global::LlsfMsgs.CapColor.CapBlack;

    private global::LlsfMsgs.CapColor capColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LlsfMsgs.CapColor CapColor {
      get { if ((_hasBits0 & 8) != 0) { return capColor_; } else { return CapColorDefaultValue; } }
      set {
        _hasBits0 |= 8;
        capColor_ = value;
      }
    }
    /// <summary>Gets whether the "cap_color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCapColor {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "cap_color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCapColor() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "quantity_requested" field.</summary>
    public const int QuantityRequestedFieldNumber = 6;
    private readonly static uint QuantityRequestedDefaultValue = 0;

    private uint quantityRequested_;
    /// <summary>
    /// Quantity requested and delivered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint QuantityRequested {
      get { if ((_hasBits0 & 16) != 0) { return quantityRequested_; } else { return QuantityRequestedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        quantityRequested_ = value;
      }
    }
    /// <summary>Gets whether the "quantity_requested" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuantityRequested {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "quantity_requested" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuantityRequested() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "quantity_delivered_cyan" field.</summary>
    public const int QuantityDeliveredCyanFieldNumber = 7;
    private readonly static uint QuantityDeliveredCyanDefaultValue = 0;

    private uint quantityDeliveredCyan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint QuantityDeliveredCyan {
      get { if ((_hasBits0 & 32) != 0) { return quantityDeliveredCyan_; } else { return QuantityDeliveredCyanDefaultValue; } }
      set {
        _hasBits0 |= 32;
        quantityDeliveredCyan_ = value;
      }
    }
    /// <summary>Gets whether the "quantity_delivered_cyan" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuantityDeliveredCyan {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "quantity_delivered_cyan" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuantityDeliveredCyan() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "quantity_delivered_magenta" field.</summary>
    public const int QuantityDeliveredMagentaFieldNumber = 8;
    private readonly static uint QuantityDeliveredMagentaDefaultValue = 0;

    private uint quantityDeliveredMagenta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint QuantityDeliveredMagenta {
      get { if ((_hasBits0 & 64) != 0) { return quantityDeliveredMagenta_; } else { return QuantityDeliveredMagentaDefaultValue; } }
      set {
        _hasBits0 |= 64;
        quantityDeliveredMagenta_ = value;
      }
    }
    /// <summary>Gets whether the "quantity_delivered_magenta" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuantityDeliveredMagenta {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "quantity_delivered_magenta" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuantityDeliveredMagenta() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "delivery_period_begin" field.</summary>
    public const int DeliveryPeriodBeginFieldNumber = 9;
    private readonly static uint DeliveryPeriodBeginDefaultValue = 0;

    private uint deliveryPeriodBegin_;
    /// <summary>
    /// Start and end time of the delivery
    /// period in seconds of game time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DeliveryPeriodBegin {
      get { if ((_hasBits0 & 128) != 0) { return deliveryPeriodBegin_; } else { return DeliveryPeriodBeginDefaultValue; } }
      set {
        _hasBits0 |= 128;
        deliveryPeriodBegin_ = value;
      }
    }
    /// <summary>Gets whether the "delivery_period_begin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeliveryPeriodBegin {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "delivery_period_begin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeliveryPeriodBegin() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "delivery_period_end" field.</summary>
    public const int DeliveryPeriodEndFieldNumber = 10;
    private readonly static uint DeliveryPeriodEndDefaultValue = 0;

    private uint deliveryPeriodEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DeliveryPeriodEnd {
      get { if ((_hasBits0 & 256) != 0) { return deliveryPeriodEnd_; } else { return DeliveryPeriodEndDefaultValue; } }
      set {
        _hasBits0 |= 256;
        deliveryPeriodEnd_ = value;
      }
    }
    /// <summary>Gets whether the "delivery_period_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeliveryPeriodEnd {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "delivery_period_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeliveryPeriodEnd() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "delivery_gate" field.</summary>
    public const int DeliveryGateFieldNumber = 11;
    private readonly static uint DeliveryGateDefaultValue = 0;

    private uint deliveryGate_;
    /// <summary>
    /// The gate to deliver to, defaults to any
    /// (non-defunct, i.e. non-red light) gate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DeliveryGate {
      get { if ((_hasBits0 & 512) != 0) { return deliveryGate_; } else { return DeliveryGateDefaultValue; } }
      set {
        _hasBits0 |= 512;
        deliveryGate_ = value;
      }
    }
    /// <summary>Gets whether the "delivery_gate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeliveryGate {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "delivery_gate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeliveryGate() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "unconfirmed_deliveries" field.</summary>
    public const int UnconfirmedDeliveriesFieldNumber = 12;
    private static readonly pb::FieldCodec<global::LlsfMsgs.UnconfirmedDelivery> _repeated_unconfirmedDeliveries_codec
        = pb::FieldCodec.ForMessage(98, global::LlsfMsgs.UnconfirmedDelivery.Parser);
    private readonly pbc::RepeatedField<global::LlsfMsgs.UnconfirmedDelivery> unconfirmedDeliveries_ = new pbc::RepeatedField<global::LlsfMsgs.UnconfirmedDelivery>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LlsfMsgs.UnconfirmedDelivery> UnconfirmedDeliveries {
      get { return unconfirmedDeliveries_; }
    }

    /// <summary>Field number for the "competitive" field.</summary>
    public const int CompetitiveFieldNumber = 13;
    private readonly static bool CompetitiveDefaultValue = false;

    private bool competitive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Competitive {
      get { if ((_hasBits0 & 1024) != 0) { return competitive_; } else { return CompetitiveDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        competitive_ = value;
      }
    }
    /// <summary>Gets whether the "competitive" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompetitive {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "competitive" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompetitive() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Order);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Order other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Complexity != other.Complexity) return false;
      if (BaseColor != other.BaseColor) return false;
      if(!ringColors_.Equals(other.ringColors_)) return false;
      if (CapColor != other.CapColor) return false;
      if (QuantityRequested != other.QuantityRequested) return false;
      if (QuantityDeliveredCyan != other.QuantityDeliveredCyan) return false;
      if (QuantityDeliveredMagenta != other.QuantityDeliveredMagenta) return false;
      if (DeliveryPeriodBegin != other.DeliveryPeriodBegin) return false;
      if (DeliveryPeriodEnd != other.DeliveryPeriodEnd) return false;
      if (DeliveryGate != other.DeliveryGate) return false;
      if(!unconfirmedDeliveries_.Equals(other.unconfirmedDeliveries_)) return false;
      if (Competitive != other.Competitive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasComplexity) hash ^= Complexity.GetHashCode();
      if (HasBaseColor) hash ^= BaseColor.GetHashCode();
      hash ^= ringColors_.GetHashCode();
      if (HasCapColor) hash ^= CapColor.GetHashCode();
      if (HasQuantityRequested) hash ^= QuantityRequested.GetHashCode();
      if (HasQuantityDeliveredCyan) hash ^= QuantityDeliveredCyan.GetHashCode();
      if (HasQuantityDeliveredMagenta) hash ^= QuantityDeliveredMagenta.GetHashCode();
      if (HasDeliveryPeriodBegin) hash ^= DeliveryPeriodBegin.GetHashCode();
      if (HasDeliveryPeriodEnd) hash ^= DeliveryPeriodEnd.GetHashCode();
      if (HasDeliveryGate) hash ^= DeliveryGate.GetHashCode();
      hash ^= unconfirmedDeliveries_.GetHashCode();
      if (HasCompetitive) hash ^= Competitive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasComplexity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Complexity);
      }
      if (HasBaseColor) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BaseColor);
      }
      ringColors_.WriteTo(output, _repeated_ringColors_codec);
      if (HasCapColor) {
        output.WriteRawTag(40);
        output.WriteEnum((int) CapColor);
      }
      if (HasQuantityRequested) {
        output.WriteRawTag(48);
        output.WriteUInt32(QuantityRequested);
      }
      if (HasQuantityDeliveredCyan) {
        output.WriteRawTag(56);
        output.WriteUInt32(QuantityDeliveredCyan);
      }
      if (HasQuantityDeliveredMagenta) {
        output.WriteRawTag(64);
        output.WriteUInt32(QuantityDeliveredMagenta);
      }
      if (HasDeliveryPeriodBegin) {
        output.WriteRawTag(72);
        output.WriteUInt32(DeliveryPeriodBegin);
      }
      if (HasDeliveryPeriodEnd) {
        output.WriteRawTag(80);
        output.WriteUInt32(DeliveryPeriodEnd);
      }
      if (HasDeliveryGate) {
        output.WriteRawTag(88);
        output.WriteUInt32(DeliveryGate);
      }
      unconfirmedDeliveries_.WriteTo(output, _repeated_unconfirmedDeliveries_codec);
      if (HasCompetitive) {
        output.WriteRawTag(104);
        output.WriteBool(Competitive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasComplexity) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Complexity);
      }
      if (HasBaseColor) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BaseColor);
      }
      ringColors_.WriteTo(ref output, _repeated_ringColors_codec);
      if (HasCapColor) {
        output.WriteRawTag(40);
        output.WriteEnum((int) CapColor);
      }
      if (HasQuantityRequested) {
        output.WriteRawTag(48);
        output.WriteUInt32(QuantityRequested);
      }
      if (HasQuantityDeliveredCyan) {
        output.WriteRawTag(56);
        output.WriteUInt32(QuantityDeliveredCyan);
      }
      if (HasQuantityDeliveredMagenta) {
        output.WriteRawTag(64);
        output.WriteUInt32(QuantityDeliveredMagenta);
      }
      if (HasDeliveryPeriodBegin) {
        output.WriteRawTag(72);
        output.WriteUInt32(DeliveryPeriodBegin);
      }
      if (HasDeliveryPeriodEnd) {
        output.WriteRawTag(80);
        output.WriteUInt32(DeliveryPeriodEnd);
      }
      if (HasDeliveryGate) {
        output.WriteRawTag(88);
        output.WriteUInt32(DeliveryGate);
      }
      unconfirmedDeliveries_.WriteTo(ref output, _repeated_unconfirmedDeliveries_codec);
      if (HasCompetitive) {
        output.WriteRawTag(104);
        output.WriteBool(Competitive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasComplexity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Complexity);
      }
      if (HasBaseColor) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BaseColor);
      }
      size += ringColors_.CalculateSize(_repeated_ringColors_codec);
      if (HasCapColor) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CapColor);
      }
      if (HasQuantityRequested) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuantityRequested);
      }
      if (HasQuantityDeliveredCyan) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuantityDeliveredCyan);
      }
      if (HasQuantityDeliveredMagenta) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuantityDeliveredMagenta);
      }
      if (HasDeliveryPeriodBegin) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeliveryPeriodBegin);
      }
      if (HasDeliveryPeriodEnd) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeliveryPeriodEnd);
      }
      if (HasDeliveryGate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeliveryGate);
      }
      size += unconfirmedDeliveries_.CalculateSize(_repeated_unconfirmedDeliveries_codec);
      if (HasCompetitive) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Order other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasComplexity) {
        Complexity = other.Complexity;
      }
      if (other.HasBaseColor) {
        BaseColor = other.BaseColor;
      }
      ringColors_.Add(other.ringColors_);
      if (other.HasCapColor) {
        CapColor = other.CapColor;
      }
      if (other.HasQuantityRequested) {
        QuantityRequested = other.QuantityRequested;
      }
      if (other.HasQuantityDeliveredCyan) {
        QuantityDeliveredCyan = other.QuantityDeliveredCyan;
      }
      if (other.HasQuantityDeliveredMagenta) {
        QuantityDeliveredMagenta = other.QuantityDeliveredMagenta;
      }
      if (other.HasDeliveryPeriodBegin) {
        DeliveryPeriodBegin = other.DeliveryPeriodBegin;
      }
      if (other.HasDeliveryPeriodEnd) {
        DeliveryPeriodEnd = other.DeliveryPeriodEnd;
      }
      if (other.HasDeliveryGate) {
        DeliveryGate = other.DeliveryGate;
      }
      unconfirmedDeliveries_.Add(other.unconfirmedDeliveries_);
      if (other.HasCompetitive) {
        Competitive = other.Competitive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Complexity = (global::LlsfMsgs.Order.Types.Complexity) input.ReadEnum();
            break;
          }
          case 24: {
            BaseColor = (global::LlsfMsgs.BaseColor) input.ReadEnum();
            break;
          }
          case 34:
          case 32: {
            ringColors_.AddEntriesFrom(input, _repeated_ringColors_codec);
            break;
          }
          case 40: {
            CapColor = (global::LlsfMsgs.CapColor) input.ReadEnum();
            break;
          }
          case 48: {
            QuantityRequested = input.ReadUInt32();
            break;
          }
          case 56: {
            QuantityDeliveredCyan = input.ReadUInt32();
            break;
          }
          case 64: {
            QuantityDeliveredMagenta = input.ReadUInt32();
            break;
          }
          case 72: {
            DeliveryPeriodBegin = input.ReadUInt32();
            break;
          }
          case 80: {
            DeliveryPeriodEnd = input.ReadUInt32();
            break;
          }
          case 88: {
            DeliveryGate = input.ReadUInt32();
            break;
          }
          case 98: {
            unconfirmedDeliveries_.AddEntriesFrom(input, _repeated_unconfirmedDeliveries_codec);
            break;
          }
          case 104: {
            Competitive = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Complexity = (global::LlsfMsgs.Order.Types.Complexity) input.ReadEnum();
            break;
          }
          case 24: {
            BaseColor = (global::LlsfMsgs.BaseColor) input.ReadEnum();
            break;
          }
          case 34:
          case 32: {
            ringColors_.AddEntriesFrom(ref input, _repeated_ringColors_codec);
            break;
          }
          case 40: {
            CapColor = (global::LlsfMsgs.CapColor) input.ReadEnum();
            break;
          }
          case 48: {
            QuantityRequested = input.ReadUInt32();
            break;
          }
          case 56: {
            QuantityDeliveredCyan = input.ReadUInt32();
            break;
          }
          case 64: {
            QuantityDeliveredMagenta = input.ReadUInt32();
            break;
          }
          case 72: {
            DeliveryPeriodBegin = input.ReadUInt32();
            break;
          }
          case 80: {
            DeliveryPeriodEnd = input.ReadUInt32();
            break;
          }
          case 88: {
            DeliveryGate = input.ReadUInt32();
            break;
          }
          case 98: {
            unconfirmedDeliveries_.AddEntriesFrom(ref input, _repeated_unconfirmedDeliveries_codec);
            break;
          }
          case 104: {
            Competitive = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Order message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CompType {
        [pbr::OriginalName("COMP_ID")] CompId = 2000,
        [pbr::OriginalName("MSG_TYPE")] MsgType = 42,
      }

      /// <summary>
      /// Ordered product type
      /// </summary>
      public enum Complexity {
        [pbr::OriginalName("C0")] C0 = 0,
        [pbr::OriginalName("C1")] C1 = 1,
        [pbr::OriginalName("C2")] C2 = 2,
        [pbr::OriginalName("C3")] C3 = 3,
      }

    }
    #endregion

  }

  public sealed partial class OrderInfo : pb::IMessage<OrderInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderInfo> _parser = new pb::MessageParser<OrderInfo>(() => new OrderInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LlsfMsgs.OrderInfoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderInfo(OrderInfo other) : this() {
      orders_ = other.orders_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderInfo Clone() {
      return new OrderInfo(this);
    }

    /// <summary>Field number for the "orders" field.</summary>
    public const int OrdersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LlsfMsgs.Order> _repeated_orders_codec
        = pb::FieldCodec.ForMessage(10, global::LlsfMsgs.Order.Parser);
    private readonly pbc::RepeatedField<global::LlsfMsgs.Order> orders_ = new pbc::RepeatedField<global::LlsfMsgs.Order>();
    /// <summary>
    /// The current orders
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LlsfMsgs.Order> Orders {
      get { return orders_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!orders_.Equals(other.orders_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= orders_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      orders_.WriteTo(output, _repeated_orders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      orders_.WriteTo(ref output, _repeated_orders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orders_.CalculateSize(_repeated_orders_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderInfo other) {
      if (other == null) {
        return;
      }
      orders_.Add(other.orders_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orders_.AddEntriesFrom(input, _repeated_orders_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            orders_.AddEntriesFrom(ref input, _repeated_orders_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OrderInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CompType {
        [pbr::OriginalName("COMP_ID")] CompId = 2000,
        [pbr::OriginalName("MSG_TYPE")] MsgType = 41,
      }

    }
    #endregion

  }

  public sealed partial class SetOrderDelivered : pb::IMessage<SetOrderDelivered>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetOrderDelivered> _parser = new pb::MessageParser<SetOrderDelivered>(() => new SetOrderDelivered());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetOrderDelivered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LlsfMsgs.OrderInfoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetOrderDelivered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetOrderDelivered(SetOrderDelivered other) : this() {
      _hasBits0 = other._hasBits0;
      teamColor_ = other.teamColor_;
      orderId_ = other.orderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetOrderDelivered Clone() {
      return new SetOrderDelivered(this);
    }

    /// <summary>Field number for the "team_color" field.</summary>
    public const int TeamColorFieldNumber = 1;
    private readonly static global::LlsfMsgs.Team TeamColorDefaultValue = global::LlsfMsgs.Team.Cyan;

    private global::LlsfMsgs.Team teamColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LlsfMsgs.Team TeamColor {
      get { if ((_hasBits0 & 1) != 0) { return teamColor_; } else { return TeamColorDefaultValue; } }
      set {
        _hasBits0 |= 1;
        teamColor_ = value;
      }
    }
    /// <summary>Gets whether the "team_color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTeamColor {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "team_color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTeamColor() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 2;
    private readonly static uint OrderIdDefaultValue = 0;

    private uint orderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OrderId {
      get { if ((_hasBits0 & 2) != 0) { return orderId_; } else { return OrderIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        orderId_ = value;
      }
    }
    /// <summary>Gets whether the "order_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrderId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "order_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrderId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetOrderDelivered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetOrderDelivered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamColor != other.TeamColor) return false;
      if (OrderId != other.OrderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTeamColor) hash ^= TeamColor.GetHashCode();
      if (HasOrderId) hash ^= OrderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTeamColor) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TeamColor);
      }
      if (HasOrderId) {
        output.WriteRawTag(16);
        output.WriteUInt32(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTeamColor) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TeamColor);
      }
      if (HasOrderId) {
        output.WriteRawTag(16);
        output.WriteUInt32(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTeamColor) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeamColor);
      }
      if (HasOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OrderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetOrderDelivered other) {
      if (other == null) {
        return;
      }
      if (other.HasTeamColor) {
        TeamColor = other.TeamColor;
      }
      if (other.HasOrderId) {
        OrderId = other.OrderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamColor = (global::LlsfMsgs.Team) input.ReadEnum();
            break;
          }
          case 16: {
            OrderId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TeamColor = (global::LlsfMsgs.Team) input.ReadEnum();
            break;
          }
          case 16: {
            OrderId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SetOrderDelivered message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CompType {
        [pbr::OriginalName("COMP_ID")] CompId = 2000,
        [pbr::OriginalName("MSG_TYPE")] MsgType = 43,
      }

    }
    #endregion

  }

  public sealed partial class ConfirmDelivery : pb::IMessage<ConfirmDelivery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfirmDelivery> _parser = new pb::MessageParser<ConfirmDelivery>(() => new ConfirmDelivery());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfirmDelivery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LlsfMsgs.OrderInfoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmDelivery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmDelivery(ConfirmDelivery other) : this() {
      _hasBits0 = other._hasBits0;
      deliveryId_ = other.deliveryId_;
      correct_ = other.correct_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmDelivery Clone() {
      return new ConfirmDelivery(this);
    }

    /// <summary>Field number for the "delivery_id" field.</summary>
    public const int DeliveryIdFieldNumber = 1;
    private readonly static uint DeliveryIdDefaultValue = 0;

    private uint deliveryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DeliveryId {
      get { if ((_hasBits0 & 1) != 0) { return deliveryId_; } else { return DeliveryIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deliveryId_ = value;
      }
    }
    /// <summary>Gets whether the "delivery_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeliveryId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "delivery_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeliveryId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "correct" field.</summary>
    public const int CorrectFieldNumber = 2;
    private readonly static bool CorrectDefaultValue = false;

    private bool correct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Correct {
      get { if ((_hasBits0 & 2) != 0) { return correct_; } else { return CorrectDefaultValue; } }
      set {
        _hasBits0 |= 2;
        correct_ = value;
      }
    }
    /// <summary>Gets whether the "correct" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCorrect {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "correct" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCorrect() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfirmDelivery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfirmDelivery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeliveryId != other.DeliveryId) return false;
      if (Correct != other.Correct) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeliveryId) hash ^= DeliveryId.GetHashCode();
      if (HasCorrect) hash ^= Correct.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDeliveryId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DeliveryId);
      }
      if (HasCorrect) {
        output.WriteRawTag(16);
        output.WriteBool(Correct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDeliveryId) {
        output.WriteRawTag(8);
        output.WriteUInt32(DeliveryId);
      }
      if (HasCorrect) {
        output.WriteRawTag(16);
        output.WriteBool(Correct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDeliveryId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeliveryId);
      }
      if (HasCorrect) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfirmDelivery other) {
      if (other == null) {
        return;
      }
      if (other.HasDeliveryId) {
        DeliveryId = other.DeliveryId;
      }
      if (other.HasCorrect) {
        Correct = other.Correct;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeliveryId = input.ReadUInt32();
            break;
          }
          case 16: {
            Correct = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeliveryId = input.ReadUInt32();
            break;
          }
          case 16: {
            Correct = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ConfirmDelivery message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CompType {
        [pbr::OriginalName("COMP_ID")] CompId = 2000,
        [pbr::OriginalName("MSG_TYPE")] MsgType = 46,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
