// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RobotInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LlsfMsgs {

  /// <summary>Holder for reflection information generated from RobotInfo.proto</summary>
  public static partial class RobotInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for RobotInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RobotInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Sb2JvdEluZm8ucHJvdG8SCWxsc2ZfbXNncxoKVGltZS5wcm90bxoMUG9z",
            "ZTJELnByb3RvGgpUZWFtLnByb3RvIuQCCgVSb2JvdBIMCgRuYW1lGAEgAigJ",
            "EgwKBHRlYW0YAiACKAkSIwoKdGVhbV9jb2xvchgMIAIoDjIPLmxsc2ZfbXNn",
            "cy5UZWFtEg4KBm51bWJlchgHIAIoDRIMCgRob3N0GAMgAigJEiIKCWxhc3Rf",
            "c2VlbhgEIAIoCzIPLmxsc2ZfbXNncy5UaW1lEh8KBHBvc2UYBiABKAsyES5s",
            "bHNmX21zZ3MuUG9zZTJEEiYKC3Zpc2lvbl9wb3NlGAsgASgLMhEubGxzZl9t",
            "c2dzLlBvc2UyRBIkCgVzdGF0ZRgIIAEoDjIVLmxsc2ZfbXNncy5Sb2JvdFN0",
            "YXRlEiUKGm1haW50ZW5hbmNlX3RpbWVfcmVtYWluaW5nGAkgASgCOgEwEhoK",
            "Em1haW50ZW5hbmNlX2N5Y2xlcxgKIAEoDSImCghDb21wVHlwZRIMCgdDT01Q",
            "X0lEENAPEgwKCE1TR19UWVBFEB8iVQoJUm9ib3RJbmZvEiAKBnJvYm90cxgB",
            "IAMoCzIQLmxsc2ZfbXNncy5Sb2JvdCImCghDb21wVHlwZRIMCgdDT01QX0lE",
            "ENAPEgwKCE1TR19UWVBFEB4qOwoKUm9ib3RTdGF0ZRIKCgZBQ1RJVkUQARIP",
            "CgtNQUlOVEVOQU5DRRACEhAKDERJU1FVQUxJRklFRBADQjIKH29yZy5yb2Jv",
            "Y3VwX2xvZ2lzdGljcy5sbHNmX21zZ3NCD1JvYm90SW5mb1Byb3Rvcw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LlsfMsgs.TimeReflection.Descriptor, global::LlsfMsgs.Pose2DReflection.Descriptor, global::LlsfMsgs.TeamReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LlsfMsgs.RobotState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LlsfMsgs.Robot), global::LlsfMsgs.Robot.Parser, new[]{ "Name", "Team", "TeamColor", "Number", "Host", "LastSeen", "Pose", "VisionPose", "State", "MaintenanceTimeRemaining", "MaintenanceCycles" }, null, new[]{ typeof(global::LlsfMsgs.Robot.Types.CompType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LlsfMsgs.RobotInfo), global::LlsfMsgs.RobotInfo.Parser, new[]{ "Robots" }, null, new[]{ typeof(global::LlsfMsgs.RobotInfo.Types.CompType) }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RobotState {
    [pbr::OriginalName("ACTIVE")] Active = 1,
    [pbr::OriginalName("MAINTENANCE")] Maintenance = 2,
    [pbr::OriginalName("DISQUALIFIED")] Disqualified = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Robot : pb::IMessage<Robot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Robot> _parser = new pb::MessageParser<Robot>(() => new Robot());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Robot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LlsfMsgs.RobotInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Robot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Robot(Robot other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      team_ = other.team_;
      teamColor_ = other.teamColor_;
      number_ = other.number_;
      host_ = other.host_;
      lastSeen_ = other.lastSeen_ != null ? other.lastSeen_.Clone() : null;
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      visionPose_ = other.visionPose_ != null ? other.visionPose_.Clone() : null;
      state_ = other.state_;
      maintenanceTimeRemaining_ = other.maintenanceTimeRemaining_;
      maintenanceCycles_ = other.maintenanceCycles_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Robot Clone() {
      return new Robot(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Name, team, and number of the robot
    /// as it was announced by the robot in
    /// the BeaconSignal message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 2;
    private readonly static string TeamDefaultValue = "";

    private string team_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Team {
      get { return team_ ?? TeamDefaultValue; }
      set {
        team_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "team" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTeam {
      get { return team_ != null; }
    }
    /// <summary>Clears the value of the "team" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTeam() {
      team_ = null;
    }

    /// <summary>Field number for the "team_color" field.</summary>
    public const int TeamColorFieldNumber = 12;
    private readonly static global::LlsfMsgs.Team TeamColorDefaultValue = global::LlsfMsgs.Team.Cyan;

    private global::LlsfMsgs.Team teamColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LlsfMsgs.Team TeamColor {
      get { if ((_hasBits0 & 16) != 0) { return teamColor_; } else { return TeamColorDefaultValue; } }
      set {
        _hasBits0 |= 16;
        teamColor_ = value;
      }
    }
    /// <summary>Gets whether the "team_color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTeamColor {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "team_color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTeamColor() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 7;
    private readonly static uint NumberDefaultValue = 0;

    private uint number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Number {
      get { if ((_hasBits0 & 1) != 0) { return number_; } else { return NumberDefaultValue; } }
      set {
        _hasBits0 |= 1;
        number_ = value;
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumber() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 3;
    private readonly static string HostDefaultValue = "";

    private string host_;
    /// <summary>
    /// Host from where the BeaconSignal
    /// was received
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Host {
      get { return host_ ?? HostDefaultValue; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "host" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the "host" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "last_seen" field.</summary>
    public const int LastSeenFieldNumber = 4;
    private global::LlsfMsgs.Time lastSeen_;
    /// <summary>
    /// Timestamp in UTC when a BeaconSignal
    /// was received last from this robot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LlsfMsgs.Time LastSeen {
      get { return lastSeen_; }
      set {
        lastSeen_ = value;
      }
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 6;
    private global::LlsfMsgs.Pose2D pose_;
    /// <summary>
    /// Pose information (reported by robot)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LlsfMsgs.Pose2D Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    /// <summary>Field number for the "vision_pose" field.</summary>
    public const int VisionPoseFieldNumber = 11;
    private global::LlsfMsgs.Pose2D visionPose_;
    /// <summary>
    /// Pose information (reported by vision)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LlsfMsgs.Pose2D VisionPose {
      get { return visionPose_; }
      set {
        visionPose_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 8;
    private readonly static global::LlsfMsgs.RobotState StateDefaultValue = global::LlsfMsgs.RobotState.Active;

    private global::LlsfMsgs.RobotState state_;
    /// <summary>
    /// Current state of this robot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LlsfMsgs.RobotState State {
      get { if ((_hasBits0 & 2) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "maintenance_time_remaining" field.</summary>
    public const int MaintenanceTimeRemainingFieldNumber = 9;
    private readonly static float MaintenanceTimeRemainingDefaultValue = 0F;

    private float maintenanceTimeRemaining_;
    /// <summary>
    /// Time in seconds remaining in current
    /// maintenance cycle, negative if overdue
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaintenanceTimeRemaining {
      get { if ((_hasBits0 & 4) != 0) { return maintenanceTimeRemaining_; } else { return MaintenanceTimeRemainingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maintenanceTimeRemaining_ = value;
      }
    }
    /// <summary>Gets whether the "maintenance_time_remaining" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaintenanceTimeRemaining {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "maintenance_time_remaining" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaintenanceTimeRemaining() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "maintenance_cycles" field.</summary>
    public const int MaintenanceCyclesFieldNumber = 10;
    private readonly static uint MaintenanceCyclesDefaultValue = 0;

    private uint maintenanceCycles_;
    /// <summary>
    /// number of times maintenance
    /// has been performed, including current
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaintenanceCycles {
      get { if ((_hasBits0 & 8) != 0) { return maintenanceCycles_; } else { return MaintenanceCyclesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        maintenanceCycles_ = value;
      }
    }
    /// <summary>Gets whether the "maintenance_cycles" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaintenanceCycles {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "maintenance_cycles" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaintenanceCycles() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Robot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Robot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Team != other.Team) return false;
      if (TeamColor != other.TeamColor) return false;
      if (Number != other.Number) return false;
      if (Host != other.Host) return false;
      if (!object.Equals(LastSeen, other.LastSeen)) return false;
      if (!object.Equals(Pose, other.Pose)) return false;
      if (!object.Equals(VisionPose, other.VisionPose)) return false;
      if (State != other.State) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaintenanceTimeRemaining, other.MaintenanceTimeRemaining)) return false;
      if (MaintenanceCycles != other.MaintenanceCycles) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasTeam) hash ^= Team.GetHashCode();
      if (HasTeamColor) hash ^= TeamColor.GetHashCode();
      if (HasNumber) hash ^= Number.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (lastSeen_ != null) hash ^= LastSeen.GetHashCode();
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (visionPose_ != null) hash ^= VisionPose.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasMaintenanceTimeRemaining) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaintenanceTimeRemaining);
      if (HasMaintenanceCycles) hash ^= MaintenanceCycles.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasTeam) {
        output.WriteRawTag(18);
        output.WriteString(Team);
      }
      if (HasHost) {
        output.WriteRawTag(26);
        output.WriteString(Host);
      }
      if (lastSeen_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastSeen);
      }
      if (pose_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Pose);
      }
      if (HasNumber) {
        output.WriteRawTag(56);
        output.WriteUInt32(Number);
      }
      if (HasState) {
        output.WriteRawTag(64);
        output.WriteEnum((int) State);
      }
      if (HasMaintenanceTimeRemaining) {
        output.WriteRawTag(77);
        output.WriteFloat(MaintenanceTimeRemaining);
      }
      if (HasMaintenanceCycles) {
        output.WriteRawTag(80);
        output.WriteUInt32(MaintenanceCycles);
      }
      if (visionPose_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(VisionPose);
      }
      if (HasTeamColor) {
        output.WriteRawTag(96);
        output.WriteEnum((int) TeamColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasTeam) {
        output.WriteRawTag(18);
        output.WriteString(Team);
      }
      if (HasHost) {
        output.WriteRawTag(26);
        output.WriteString(Host);
      }
      if (lastSeen_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastSeen);
      }
      if (pose_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Pose);
      }
      if (HasNumber) {
        output.WriteRawTag(56);
        output.WriteUInt32(Number);
      }
      if (HasState) {
        output.WriteRawTag(64);
        output.WriteEnum((int) State);
      }
      if (HasMaintenanceTimeRemaining) {
        output.WriteRawTag(77);
        output.WriteFloat(MaintenanceTimeRemaining);
      }
      if (HasMaintenanceCycles) {
        output.WriteRawTag(80);
        output.WriteUInt32(MaintenanceCycles);
      }
      if (visionPose_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(VisionPose);
      }
      if (HasTeamColor) {
        output.WriteRawTag(96);
        output.WriteEnum((int) TeamColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasTeam) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Team);
      }
      if (HasTeamColor) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeamColor);
      }
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Number);
      }
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (lastSeen_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastSeen);
      }
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (visionPose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VisionPose);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HasMaintenanceTimeRemaining) {
        size += 1 + 4;
      }
      if (HasMaintenanceCycles) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaintenanceCycles);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Robot other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasTeam) {
        Team = other.Team;
      }
      if (other.HasTeamColor) {
        TeamColor = other.TeamColor;
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      if (other.HasHost) {
        Host = other.Host;
      }
      if (other.lastSeen_ != null) {
        if (lastSeen_ == null) {
          LastSeen = new global::LlsfMsgs.Time();
        }
        LastSeen.MergeFrom(other.LastSeen);
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::LlsfMsgs.Pose2D();
        }
        Pose.MergeFrom(other.Pose);
      }
      if (other.visionPose_ != null) {
        if (visionPose_ == null) {
          VisionPose = new global::LlsfMsgs.Pose2D();
        }
        VisionPose.MergeFrom(other.VisionPose);
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasMaintenanceTimeRemaining) {
        MaintenanceTimeRemaining = other.MaintenanceTimeRemaining;
      }
      if (other.HasMaintenanceCycles) {
        MaintenanceCycles = other.MaintenanceCycles;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Team = input.ReadString();
            break;
          }
          case 26: {
            Host = input.ReadString();
            break;
          }
          case 34: {
            if (lastSeen_ == null) {
              LastSeen = new global::LlsfMsgs.Time();
            }
            input.ReadMessage(LastSeen);
            break;
          }
          case 50: {
            if (pose_ == null) {
              Pose = new global::LlsfMsgs.Pose2D();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 56: {
            Number = input.ReadUInt32();
            break;
          }
          case 64: {
            State = (global::LlsfMsgs.RobotState) input.ReadEnum();
            break;
          }
          case 77: {
            MaintenanceTimeRemaining = input.ReadFloat();
            break;
          }
          case 80: {
            MaintenanceCycles = input.ReadUInt32();
            break;
          }
          case 90: {
            if (visionPose_ == null) {
              VisionPose = new global::LlsfMsgs.Pose2D();
            }
            input.ReadMessage(VisionPose);
            break;
          }
          case 96: {
            TeamColor = (global::LlsfMsgs.Team) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Team = input.ReadString();
            break;
          }
          case 26: {
            Host = input.ReadString();
            break;
          }
          case 34: {
            if (lastSeen_ == null) {
              LastSeen = new global::LlsfMsgs.Time();
            }
            input.ReadMessage(LastSeen);
            break;
          }
          case 50: {
            if (pose_ == null) {
              Pose = new global::LlsfMsgs.Pose2D();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 56: {
            Number = input.ReadUInt32();
            break;
          }
          case 64: {
            State = (global::LlsfMsgs.RobotState) input.ReadEnum();
            break;
          }
          case 77: {
            MaintenanceTimeRemaining = input.ReadFloat();
            break;
          }
          case 80: {
            MaintenanceCycles = input.ReadUInt32();
            break;
          }
          case 90: {
            if (visionPose_ == null) {
              VisionPose = new global::LlsfMsgs.Pose2D();
            }
            input.ReadMessage(VisionPose);
            break;
          }
          case 96: {
            TeamColor = (global::LlsfMsgs.Team) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Robot message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CompType {
        [pbr::OriginalName("COMP_ID")] CompId = 2000,
        [pbr::OriginalName("MSG_TYPE")] MsgType = 31,
      }

    }
    #endregion

  }

  public sealed partial class RobotInfo : pb::IMessage<RobotInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RobotInfo> _parser = new pb::MessageParser<RobotInfo>(() => new RobotInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RobotInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LlsfMsgs.RobotInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RobotInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RobotInfo(RobotInfo other) : this() {
      robots_ = other.robots_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RobotInfo Clone() {
      return new RobotInfo(this);
    }

    /// <summary>Field number for the "robots" field.</summary>
    public const int RobotsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LlsfMsgs.Robot> _repeated_robots_codec
        = pb::FieldCodec.ForMessage(10, global::LlsfMsgs.Robot.Parser);
    private readonly pbc::RepeatedField<global::LlsfMsgs.Robot> robots_ = new pbc::RepeatedField<global::LlsfMsgs.Robot>();
    /// <summary>
    /// List of all known robots
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LlsfMsgs.Robot> Robots {
      get { return robots_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RobotInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RobotInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!robots_.Equals(other.robots_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= robots_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      robots_.WriteTo(output, _repeated_robots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      robots_.WriteTo(ref output, _repeated_robots_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += robots_.CalculateSize(_repeated_robots_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RobotInfo other) {
      if (other == null) {
        return;
      }
      robots_.Add(other.robots_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            robots_.AddEntriesFrom(input, _repeated_robots_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            robots_.AddEntriesFrom(ref input, _repeated_robots_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RobotInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CompType {
        [pbr::OriginalName("COMP_ID")] CompId = 2000,
        [pbr::OriginalName("MSG_TYPE")] MsgType = 30,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
